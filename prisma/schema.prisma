generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Role {
  id         Int      @id @default(autoincrement())
  name       String   @db.VarChar(50)
  label      String   @db.VarChar(50)
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt
  user       User[]

  @@map("roles")
}

model Todo {
  id         Int       @id @default(autoincrement())
  task       String?   @db.VarChar(255)
  due_date   DateTime? @db.Timestamptz(6)
  created_at DateTime  @default(now())
  updated_at DateTime  @updatedAt
  user_id    Int
  user       User      @relation(fields: [user_id], references: [id], onDelete: Cascade)

  @@map("todos")
}

model Profile {
  id         Int       @id @default(autoincrement())
  bio        String
  birth_day  DateTime? @db.Timestamptz(6)
  created_at DateTime  @default(now())
  updated_at DateTime  @updatedAt
  user_id    Int
  user       User      @relation(fields: [user_id], references: [id], onDelete: Cascade)

  @@map("profiles")
}

model User {
  id            Int            @id @default(autoincrement())
  username      String         @unique @db.VarChar(255)
  email         String         @unique @db.VarChar(255)
  first_name    String         @db.VarChar(255)
  last_name     String         @db.VarChar(255)
  phone_number  String         @unique @db.VarChar(255)
  last_login    DateTime?      @db.Timestamptz(6)
  password      String         @db.VarChar(255)
  active        Boolean        @default(false)
  created_at    DateTime       @default(now())
  updated_at    DateTime       @updatedAt
  deleted_at    DateTime?      @db.Timestamptz(6)
  role_id       Int?
  profiles      Profile[]
  todos         Todo[]
  roles         Role?          @relation(fields: [role_id], references: [id], onDelete: Cascade)
  refreshTokens RefreshToken[]

  @@map("users")
}

model RefreshToken {
  id           String   @id @unique @default(uuid())
  hashed_token String
  user_id      Int
  user         User     @relation(fields: [user_id], references: [id], onDelete: Cascade)
  revoked      Boolean  @default(false)
  created_at   DateTime @default(now())
  updated_at   DateTime @updatedAt

  @@map("refresh_token")
}
