generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["relationJoins"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model SequelizeMeta {
  name String @id @db.VarChar(255)
}

model products {
  id          Int      @id @default(autoincrement())
  name        String?  @db.VarChar(255)
  description String?  @db.VarChar(255)
  price       Float?
  created_at  DateTime @default(now())
  updated_at  DateTime @updatedAt
  user_id     Int?
  users       users?   @relation(fields: [user_id], references: [id])
}

model profiles {
  id         Int       @id @default(autoincrement())
  bio        String
  birthday   DateTime? @db.Timestamptz(6)
  created_at DateTime  @default(now())
  updated_at DateTime  @updatedAt
  user_id    Int?
  users      users?    @relation(fields: [user_id], references: [id])
}

model refresh_tokens {
  id           Int      @id @default(autoincrement())
  hashed_token String
  revoked      Boolean  @default(false)
  created_at   DateTime @default(now())
  updated_at   DateTime @updatedAt
  user_id      Int?
  users        users?   @relation(fields: [user_id], references: [id])
}

model roles {
  id         Int      @id @default(autoincrement())
  name       String   @db.VarChar(50)
  label      String   @db.VarChar(50)
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt
  users      users[]
}

model todos {
  id         Int       @id @default(autoincrement())
  task       String?   @db.VarChar(255)
  due_date   DateTime? @db.Timestamptz(6)
  created_at DateTime  @default(now())
  updated_at DateTime  @updatedAt
  user_id    Int?
  users      users?    @relation(fields: [user_id], references: [id])
}

model users {
  id             Int              @id @default(autoincrement())
  username       String           @unique @db.VarChar(255)
  email          String           @unique @db.VarChar(255)
  first_name     String           @db.VarChar(255)
  last_name      String           @db.VarChar(255)
  phone_number   String           @unique @db.VarChar(255)
  last_login     DateTime?        @db.Timestamptz(6)
  password       String           @db.VarChar(255)
  active         Boolean          @default(false)
  created_at     DateTime         @default(now())
  updated_at     DateTime         @updatedAt
  deleted_at     DateTime?        @db.Timestamptz(6)
  role_id        Int?
  products       products[]
  profile        profiles[]
  refresh_tokens refresh_tokens[]
  todos          todos[]
  roles          roles?           @relation(fields: [role_id], references: [id])
}
